makeCacheMatrix <- function(x = matrix()) {
  inv <- NULL
  set <- function(y) {
    x <<- y
    inv <<- NULL
  }
  get <- function() x
  setInverse <- function(inverse) inv <<- inverse
  getInverse <- function() inv
  list(set = set,
       get = get,
       setInverse = setInverse,
       getInverse = getInverse)
}

cacheSolve <- function(x, ...) {
  
  iv <- x$getInverse()
  if (!is.null(iv)) 
    {
    message("getting cached data")
    return(iv)
  }
    
  else
  {
    mat <- x$get()
    j <- solve(mat,...)
    x$setInverse(j)
    j
  }
}


f <- makeCacheMatrix(matrix(1:4, 2, 2))
print(cacheSolve(f))


print(cacheSolve(matrix(1:4, 2, 2)))
